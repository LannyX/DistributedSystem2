[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial source changes: [0m
[0m[[0m[0mdebug[0m] [0m[0m	removed:Set(/Users/Lanny/Documents/csc536 DS2/hw2/src/main/scala/Tokens/Tokens.scala, /Users/Lanny/Documents/csc536 DS2/hw2/src/main/scala/snapshot/snapShot.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	added: Set(/Users/Lanny/Documents/CSC536 DS2/hw2/src/main/scala/snapshot/snapShot.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	modified: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated products: Set(/Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/Server$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/goToThree.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/goToThree$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/TOTHREE$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/TOTWO.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/Server$delayedInit$body.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/Server2$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/Tokens$$anonfun$receive$1.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/TOTWO$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/TOTHREE.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/snapShot$$anonfun$receive$1.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/goToTwo$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/goToTwo$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/Server2.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/goToThree$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/TOTWO.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/snapShot.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/goToTwo.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/TOTWO$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/goToTwo.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/MARKER$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/TOTHREE.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/Server2$delayedInit$body.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/TOTHREE$.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/snapshot/MARKER.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/Tokens.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/Server.class, /Users/Lanny/Documents/csc536 DS2/hw2/target/scala-2.12/classes/Tokens/goToThree.class)[0m
[0m[[0m[0mdebug[0m] [0m[0mExternal API changes: API Changes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mModified binary dependencies: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial directly invalidated classes: Set(snapshot.MARKER, snapshot.goToThree, Tokens.Server, Tokens.goToThree, snapshot.snapShot, Tokens.Tokens, snapshot.TOTHREE, Tokens.TOTWO, snapshot.TOTWO, snapshot.Server2, Tokens.goToTwo, snapshot.goToTwo, Tokens.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0m[0m
[0m[[0m[0mdebug[0m] [0m[0mSources indirectly invalidated by:[0m
[0m[[0m[0mdebug[0m] [0m[0m	product: Set(/Users/Lanny/Documents/csc536 DS2/hw2/src/main/scala/Tokens/Tokens.scala, /Users/Lanny/Documents/csc536 DS2/hw2/src/main/scala/snapshot/snapShot.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0m	binary dep: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0m	external source: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated classes: Set(snapshot.MARKER, snapshot.goToThree, Tokens.Server, Tokens.goToThree, snapshot.snapShot, Tokens.Tokens, snapshot.TOTHREE, Tokens.TOTWO, snapshot.TOTWO, snapshot.Server2, Tokens.goToTwo, snapshot.goToTwo, Tokens.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0mAll initially invalidated sources:Set(/Users/Lanny/Documents/CSC536 DS2/hw2/src/main/scala/snapshot/snapShot.scala, /Users/Lanny/Documents/csc536 DS2/hw2/src/main/scala/Tokens/Tokens.scala, /Users/Lanny/Documents/csc536 DS2/hw2/src/main/scala/snapshot/snapShot.scala)[0m
[0m[[0m[0mdebug[0m] [0m[0mRecompiling all 1 sources: invalidated sources (3) exceeded 50.0% of all sources[0m
[0m[[0m[0minfo[0m] [0m[0mCompiling 1 Scala source to /Users/Lanny/Documents/CSC536 DS2/hw2/target/scala-2.12/classes ...[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.5:compile for Scala 2.12.5[0m
[0m[[0m[0mdebug[0m] [0m[0mGetting org.scala-sbt:compiler-bridge_2.12:1.1.5:compile for Scala 2.12.5[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] Running cached compiler 6e6e73e9 for Scala compiler version 2.12.5[0m
[0m[[0m[0mdebug[0m] [0m[0m[zinc] The Scala compiler is invoked with:[0m
[0m[[0m[0mdebug[0m] [0m[0m	-unchecked[0m
[0m[[0m[0mdebug[0m] [0m[0m	-deprecation[0m
[0m[[0m[0mdebug[0m] [0m[0m	-bootclasspath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/resources.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/rt.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/sunrsasign.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jsse.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jce.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/charsets.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/lib/jfr.jar:/Library/Java/JavaVirtualMachines/jdk1.8.0_111.jdk/Contents/Home/jre/classes:/Users/Lanny/.ivy2/cache/org.scala-lang/scala-library/jars/scala-library-2.12.5.jar[0m
[0m[[0m[0mdebug[0m] [0m[0m	-classpath[0m
[0m[[0m[0mdebug[0m] [0m[0m	/Users/Lanny/Documents/CSC536 DS2/hw2/target/scala-2.12/classes:/Users/Lanny/.ivy2/cache/com.typesafe.akka/akka-actor_2.12/jars/akka-actor_2.12-2.5.11.jar:/Users/Lanny/.ivy2/cache/com.typesafe/config/bundles/config-1.3.2.jar:/Users/Lanny/.ivy2/cache/org.scala-lang.modules/scala-java8-compat_2.12/bundles/scala-java8-compat_2.12-0.8.0.jar[0m
[0m[[0m[0mdebug[0m] [0m[0mScala compilation took 9.060601445 s[0m
[0m[[0m[0minfo[0m] [0m[0mDone compiling.[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Tokens.TOTWO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Tokens.TOTWO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Tokens.TOTWO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Tokens.TOTWO,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(TOTWO,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The Tokens.TOTWO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(TOTWO,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Tokens.TOTWO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.TOKENB...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.TOKENB)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.TOKENB)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.TOKENB,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(TOKENB,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.TOKENB has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(TOKENB,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.TOKENB)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.goToB...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.goToB)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.goToB)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.goToB,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(snapshot;goToB;init;,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(goToB,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(thirdPath,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.goToB has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(snapshot;goToB;init;,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(goToB,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(thirdPath,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.goToB)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.snapShot...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.snapShot)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.snapShot)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.snapShot,ModifiedNames(changes = UsedName(toTwoCount,[Default]), UsedName(aCount,[Default]), UsedName(total1,[Default]), UsedName(bCount,[Default]), UsedName(toThreeCount,[Default]))) invalidates 1 classes due to The snapshot.snapShot has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(toTwoCount,[Default]), UsedName(aCount,[Default]), UsedName(total1,[Default]), UsedName(bCount,[Default]), UsedName(toThreeCount,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.snapShot)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.TOKENA...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.TOKENA)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.TOKENA)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.TOKENA,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(TOKENA,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.TOKENA has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(TOKENA,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.TOKENA)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Tokens.goToTwo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Tokens.goToTwo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Tokens.goToTwo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Tokens.goToTwo,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(goToTwo,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Tokens;goToTwo;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(secondPath,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The Tokens.goToTwo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(goToTwo,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName(Tokens;goToTwo;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(secondPath,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Tokens.goToTwo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.goToTwo...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.goToTwo)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.goToTwo)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.goToTwo,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(goToTwo,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(snapshot;goToTwo;init;,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(secondPath,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.goToTwo has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(goToTwo,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(snapshot;goToTwo;init;,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(secondPath,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.goToTwo)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.Server2...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.Server2)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.Server2)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.Server2,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(system,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(third,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(Server2,[Default]), UsedName(second,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(first,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.Server2 has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(system,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(third,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(Server2,[Default]), UsedName(second,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(first,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.Server2)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.goToA...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.goToA)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.goToA)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.goToA,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(goToA,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(secondPath,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(snapshot;goToA;init;,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.goToA has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(goToA,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(secondPath,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(snapshot;goToA;init;,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.goToA)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.Server...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.Server)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.Server)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.Server,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(system,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(third,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(second,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Server,[Default]), UsedName(first,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.Server has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(system,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(third,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(second,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Server,[Default]), UsedName(first,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.Server)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Tokens.Server...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Tokens.Server)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Tokens.Server)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Tokens.Server,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(system,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(third,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(second,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Server,[Default]), UsedName(first,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The Tokens.Server has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(system,[Default]), UsedName(main,[Default]), UsedName(wait,[Default]), UsedName(delayedInit,[Default]), UsedName(notifyAll,[Default]), UsedName(executionStart,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(third,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(second,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(Server,[Default]), UsedName(first,[Default]), UsedName(clone,[Default]), UsedName(args,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Tokens.Server)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Tokens.TOTHREE...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Tokens.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Tokens.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Tokens.TOTHREE,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(TOTHREE,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The Tokens.TOTHREE has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(TOTHREE,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Tokens.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.MARKER...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.MARKER)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.MARKER)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.MARKER,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(number,[Default]), UsedName(hashCode,[Default]), UsedName(MARKER,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(snapshot;MARKER;init;,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.MARKER has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(number,[Default]), UsedName(hashCode,[Default]), UsedName(MARKER,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(snapshot;MARKER;init;,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.MARKER)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Tokens.goToThree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Tokens.goToThree)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Tokens.goToThree)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Tokens.goToThree,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(thirdPath,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(Tokens;goToThree;init;,[Default]), UsedName(goToThree,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The Tokens.goToThree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(thirdPath,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(Tokens;goToThree;init;,[Default]), UsedName(goToThree,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Tokens.goToThree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.TOTWO...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.TOTWO)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.TOTWO)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.TOTWO,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(TOTWO,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.TOTWO has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(TOTWO,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.TOTWO)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.TOTHREE...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.TOTHREE,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(TOTHREE,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.TOTHREE has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(TOTHREE,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.TOTHREE)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from snapshot.goToThree...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(snapshot.goToThree)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(snapshot.goToThree)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(snapshot.goToThree,ModifiedNames(changes = UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(snapshot;goToThree;init;,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(thirdPath,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(goToThree,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The snapshot.goToThree has the following regular definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(finalize,[Default]), UsedName(hashCode,[Default]), UsedName(productElement,[Default]), UsedName(copy,[Default]), UsedName(notify,[Default]), UsedName(productPrefix,[Default]), UsedName(productIterator,[Default]), UsedName(!=,[Default]), UsedName(snapshot;goToThree;init;,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(isInstanceOf,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(canEqual,[Default]), UsedName(thirdPath,[Default]), UsedName(productArity,[Default]), UsedName(equals,[Default]), UsedName(toString,[Default]), UsedName(==,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(copy$default$1,[Default]), UsedName(goToThree,[Default]), UsedName(clone,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(snapshot.goToThree)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidating (transitively) by inheritance from Tokens.Tokens...[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set(Tokens.Tokens)[0m
[0m[[0m[0mdebug[0m] [0m[0mInvalidated by transitive inheritance dependency: Set(Tokens.Tokens)[0m
[0m[[0m[0mdebug[0m] [0m[0mChange NamesChange(Tokens.Tokens,ModifiedNames(changes = UsedName(Receive,[Default]), UsedName(finalize,[Default]), UsedName(toTwoCount,[Default]), UsedName(hashCode,[Default]), UsedName(notify,[Default]), UsedName(Tokens,[Default]), UsedName(p2,[Default]), UsedName(!=,[Default]), UsedName($init$,[Default]), UsedName(wait,[Default]), UsedName(notifyAll,[Default]), UsedName(synchronized,[Default]), UsedName(getClass,[Default]), UsedName(sender,[Default]), UsedName(aroundPreStart,[Default]), UsedName(isInstanceOf,[Default]), UsedName(receive,[Default]), UsedName(Tokens;Tokens;init;,[Default]), UsedName($asInstanceOf,[Default]), UsedName(ne,[Default]), UsedName(aroundReceive,[Default]), UsedName(postStop,[Default]), UsedName(context,[Implicit]), UsedName(aroundPostStop,[Default]), UsedName(self,[Implicit]), UsedName(equals,[Default]), UsedName(p3,[Default]), UsedName(preStart,[Default]), UsedName(toString,[Default]), UsedName(preRestart,[Default]), UsedName(==,[Default]), UsedName(aroundPostRestart,[Default]), UsedName(eq,[Default]), UsedName(asInstanceOf,[Default]), UsedName(aroundPreRestart,[Default]), UsedName(unhandled,[Default]), UsedName(postRestart,[Default]), UsedName(supervisorStrategy,[Default]), UsedName(toThreeCount,[Default]), UsedName(clone,[Default]), UsedName(p1,[Default]), UsedName($isInstanceOf,[Default]), UsedName(##,[Default]))) invalidates 1 classes due to The Tokens.Tokens has the following implicit definitions changed:[0m
[0m[[0m[0mdebug[0m] [0m[0m	UsedName(context,[Implicit]), UsedName(self,[Implicit]).[0m
[0m[[0m[0mdebug[0m] [0m[0m	> by transitive inheritance: Set(Tokens.Tokens)[0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m	> [0m
[0m[[0m[0mdebug[0m] [0m[0m        [0m
[0m[[0m[0mdebug[0m] [0m[0mNew invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mInitial set of included nodes: Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mPreviously invalidated, but (transitively) depend on new invalidations:[0m
[0m[[0m[0mdebug[0m] [0m[0m	Set()[0m
[0m[[0m[0mdebug[0m] [0m[0mAll newly invalidated classes after taking into account (previously) recompiled classes:Set()[0m
